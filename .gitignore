# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# It's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Editor/IDE specific files #
##############################
*.idea
*.vscode
*.sublime-project
*.sublime-workspace
*.suo
*.ntvs*
*.njsproj
*.sln
*.swp

# Dependency directories #
##########################
node_modules/
jspm_packages/

# Build output #
###############
build/
dist/
bin/
out/

# Environment files #
#####################
.env
*.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Python #
##########
*.pyc
__pycache__/

# Byte-compiled / optimized / DLL files #
#########################################
*.py[cod]
*$py.class
__pycache__/
*.so
*.dylib

# C extensions #
################
*.so

# Distribution / packaging #
###########################
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# Installer logs #
##################
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports #
###############################
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Translations #
################
*.mo
*.pot

# Django stuff #
################
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff #
###############
instance/
.webassets-cache

# Scrapy stuff #
################
.scrapy

# Sphinx documentation #
########################
docs/_build/

# PyBuilder #
#############
target/

# Jupyter Notebook #
####################
.ipynb_checkpoints

# IPython #
###########
profile_default/
ipython_config.py

# pyenv #
#########
.python-version

# pipenv #
##########
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582 #
###########
__pypackages__/

# Celery stuff #
################
celerybeat-schedule
celerybeat.pid

# SageMath parsed files #
#########################
*.sage.py

# Environments #
###############
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings #
##########################
.spyderproject
.spyproject

# Rope project settings #
########################
.ropeproject

# mkdocs documentation #
########################
/site

# mypy #
########
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker #
#####################
.pyre/

# pip cache #
#############
pip-cache/

# Pylons stuff #
################
data.db

# JupyterLab #
##############
/lab/

# IPython #
###########
.ipython/

# pytorch #
###########
__pycache__/
*.pyc
*.pyo
*.pyd
*.so
*.bak
*.swp
*~                   # backup files
